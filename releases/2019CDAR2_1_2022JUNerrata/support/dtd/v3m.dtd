<?xml encoding="UTF-8"?>
<!--Generated by XML Authority-->
<!-- ............................................................... -->
<!-- XML specification DTD ......................................... -->
<!-- ............................................................... -->
<!--
TYPICAL INVOCATION:
#  <!DOCTYPE spec PUBLIC
#       "-//HL7//XML specification DTD::2001-05-09//EN"
#       "http://www.hl7.org/v3pub-2001-05-09.dtd">

PURPOSE:
  An earlier version of this DTD was developed for use with the
  XML family of W3C specifications.  It has been modified for
  use with the HL7 V3 publications.  It is an XML-compliant DTD.

DEPENDENCIES:
  None.

CHANGE HISTORY:
2001-09-06: pvb: added optional shorttitle child to header
2001-09-06: pvb: changed CM of back to allow arbitrary interleaving of
                 div1 and inform-div1
2001-09-07: pvb: changed xspecref to have @spec and @ref attrs
                 instead of a single href attribute, which should
                 each the HTML vs. PDF generation separation
2001-09-07: pvb: added hmdCol and namespace decls                 
2002-01-12: gwb: Added proposed support for DTD version specification                 
MAINTAINER:
  Paul V. Biron
-->
<!-- ............................................................... -->
<!-- Import entities for V3 pub locations .......................... -->
<!-- ............................................................... -->
<!ENTITY % v3pub-locations SYSTEM "../../support/ent/v3m.ent">
%v3pub-locations;
<!-- ............................................................... -->
<!-- Entities for characters and symbols ........................... -->
<!-- ............................................................... -->
<!ENTITY nbsp "&#160;">
<!ENTITY reg "&#174;">
<!ENTITY mdash "&#38;#x2014;">
<!ENTITY ldquo "&#38;#x201C;">
<!ENTITY rdquo "&#38;#x201D;">
<!-- ............................................................... -->
<!-- Entities for classes of standalone elements ................... -->
<!-- ............................................................... -->
<!ENTITY % local.p.class ''>
<!ENTITY % p.class "p | indent %local.p.class;">
<!ENTITY % local.list.class ''>
<!ENTITY % list.class "list | glist">
<!ENTITY % local.speclist.class ''>
<!ENTITY % speclist.class "blist">
<!ENTITY % local.note.class ''>
<!ENTITY % note.class "note | issue">
<!ENTITY % local.illus.class ''>
<!ENTITY % illus.class "eg | graphic | table %local.illus.class;">
<!-- ............................................................... -->
<!-- Entities for classes of phrase-level elements ................. -->
<!-- ............................................................... -->
<!ENTITY % local.annot.class ''>
<!ENTITY % annot.class "footnote">
<!ENTITY % local.termdef.class ''>
<!ENTITY % termdef.class "termdef | term">
<!ENTITY % local.emph.class ''>
<!ENTITY % emph.class "emph | quote">
<!ENTITY % local.ref.class ''>
<!ENTITY % ref.class "bibref | specref | termref | titleref | tabref |
	xspecref | ilxspecref | xtermref | xdtref | xpropref | xtabref
%local.ref.class;">
<!ENTITY % local.loc.class ''>
<!ENTITY % loc.class "loc">
<!ENTITY % local.tech.class ''>
<!ENTITY % tech.class "kw | nt | xnt | code | br | edit %local.tech.class;">
<!-- edit aded 2/16/2006 -->
<!ENTITY % local.ednote.class ''>
<!ENTITY % ednote.class "ednote">
<!-- ............................................................... -->
<!-- Entities for mixtures of standalone elements .................. -->
<!-- ............................................................... -->
<!ENTITY % div.mix "%p.class; | %list.class; | %speclist.class; | %note.class; | %illus.class; | %ednote.class; | %tech.class;">
<!ENTITY % obj.mix "%p.class; | %list.class; | %speclist.class; | %note.class; | %illus.class; | %ednote.class;">
<!ENTITY % p.mix "%list.class; | %speclist.class; | %note.class; | %illus.class;">
<!ENTITY % entry.mix "%list.class;|note|eg|graphic|%ednote.class;">
<!ENTITY % hdr.mix "%p.class; | %list.class; | %ednote.class;">
<!ENTITY % termdef.mix "%note.class; | %illus.class;">
<!-- ............................................................... -->
<!-- Entities for mixtures of #PCDATA and phrase-level elements .... -->
<!-- ............................................................... -->
<!--    Note that %termdef.pcd.mix contains %note.class;
        and %illus.class;, considered standalone elements. -->
<!ENTITY % p.pcd.mix "#PCDATA | %annot.class; | %termdef.class; | %emph.class; | %ref.class; | %tech.class; | %loc.class;">
<!ENTITY % head.pcd.mix "#PCDATA | %annot.class; | %emph.class; | %tech.class; | %ednote.class;">
<!ENTITY % label.pcd.mix "#PCDATA | %annot.class; | %termdef.class; | %emph.class; | %tech.class; | %ednote.class; | %ref.class; | %loc.class;">
<!-- ht added ref -->
<!ENTITY % eg.pcd.mix "#PCDATA | %annot.class; | %emph.class; | %ednote.class;">
<!ENTITY % termdef.pcd.mix "#PCDATA | term | %emph.class; | %ref.class; | %tech.class; | %ednote.class;">
<!ENTITY % bibl.pcd.mix "#PCDATA | %emph.class; | %ref.class; | %loc.class; | %ednote.class;">
<!ENTITY % tech.pcd.mix "#PCDATA | %ednote.class;">
<!ENTITY % loc.pcd.mix "#PCDATA|%loc.class;|%ednote.class;">
<!-- ............................................................... -->
<!-- Entities for customizable content models ...................... -->
<!-- ............................................................... -->
<!ENTITY % spec.mdl "header, front?, body, back?">
<!ENTITY % local.header.mdl ''>
<!ENTITY % header.mdl "title , shorttitle?, subtitle? , version , ballot?, date , authlist? , status? , abstract? , revisiondesc? %local.header.mdl;">
<!ENTITY % local.body.mdl ''>
<!ENTITY % body.mdl "div1+ %local.body.mdl;">
<!ENTITY % local.version.att ''>
<!-- ............................................................... -->
<!-- Entities for common attributes ................................ -->
<!-- ............................................................... -->
<!--    key attribute:
        Optionally provides a sorting or indexing key, for cases when
        the element content is inappropriate for this purpose. -->
<!ENTITY % key.att " key CDATA  #IMPLIED">
<!--    def attribute:
        Points to the element where the relevant definition can be
        found, using the IDREF mechanism.  %def.att; is for optional
        def attributes, and %def-req.att; is for required def
        attributes. -->
<!ENTITY % def.att "def                    IDREF           #IMPLIED">
<!ENTITY % def-req.att " def IDREF  #REQUIRED">
<!--    ref attribute:
        Points to the element where more information can be found,
        using the IDREF mechanism.  %ref.att; is for optional
        ref attributes, and %ref-req.att; is for required ref
        attributes. -->
<!ENTITY % ref.att "ref                    IDREF           #IMPLIED">
<!ENTITY % ref-req.att " ref IDREF  #REQUIRED">
<!--    HREF and source attributes:
        Points to the element where more information or source data
        can be found, using the URL/XLink simple link mechanism.
        For some purposes, is associated with additional XLink
        attributes. %href.att; is for optional HREF attributes,
        and %href-req.att; is for required HREF attributes.
        %source-req.att; is for the source attribute, which
        is always required.  When HREF is supplied in the href.att
        version, default for xlink:form should be understood to be
        "simple". When HREF is not supplied, xlink:form should be
        understood to be "none". -->
<!--    xml:space attribute:
        Indicates that the element contains white space
        that the formatter or other application should retain,
        as appropriate to its function. -->
<!ENTITY % xmlspace.att " xml:space  (default | preserve )  #FIXED 'preserve'">
<!-- internationalization attributes
  lang        language code (backwards compatible)
  xml:lang    language code (as per XML 1.0 spec)
  dir         direction for weak/neutral text
-->
<!ENTITY % i18n " xml:lang NMTOKEN  #IMPLIED
   dir       (ltr | rtl )  #IMPLIED">
<!-- Ballot attributes: (added: GWB 20030206)
	This pair of attributes provides for assignment of ballot status 
	individually to each of the primary artifacts that arises in
	HL7 standards. They are placed here to be defined once, and
	then are included in v3mDomain, v3mRim and v3mVocabulary
	-->
<!ENTITY % ballot.att "ballotStatus (NormativeStandard | InformativeStandard | MembershipNormativeBallot | InformativeBallot | CommitteeNormativeBallot | Reference | MixedContent | AffiliateNormativeStandard | AffiliateInformativeStandard | AffiliateNormativeBallot | AffiliateInformativeBallot | LocalizedAdaptation | Proposal | Draft | NonStandardAvailable | Withdrawn | DSTUBallot | DSTU) #IMPLIED
	ballotNumber CDATA #IMPLIED">
<!--    Common attributes:
        Every element has an ID attribute (sometimes required,
        but usually optional) for links, and a Role attribute
        for extending the useful life of the DTD by allowing
        authors to make subclasses for any element. %common.att;
        is for common attributes where the ID is optional, and
        %common-idreq.att; is for common attributes where the
        ID is required. 
-->
<!--
        The class attribute was added 2/16/2006 (gwb) in order to allow 
        inclusion of an attribute to show whether an element is "inserted",
        "changed" or "deleted" since a prior publication.  This will be used
        to value the element "class" attribute in HTML.  In XHTML2, this will
        become an "edit" attribute used wherever "class" is currently used.

        If, when processing an element, for which the 'class' attribute may 
        or may not be valued, you encounter another element, the following 
        rules apply.  Note that: 'n/v' means the class attribute is not valued. 

        1) Parent = 'nv', child retains its designation
        2) Parent = 'changed', retain child value if 'deleted' or 'inserted',
             otherwise drop child desingation and inherit
        3) Parent = 'deleted', drop child designation and inherit
        4) Parent = 'inserted', retain child value if 'deleted',
             otherwise drop child desingation and inherit 
-->
<!ENTITY % common.att " id   ID       #IMPLIED
   role NMTOKEN  #IMPLIED
   class (changed | inserted | deleted) #IMPLIED
   %i18n;">
<!ENTITY % common-idreq.att " id   ID       #REQUIRED
   role NMTOKEN  #IMPLIED
   class (changed | inserted | deleted) #IMPLIED
   %i18n;">
<!-- ............................................................... -->
<!-- Common elements ............................................... -->
<!-- ............................................................... -->
<!--    head: Title on divisions, productions, and the like -->
<!--
<!ELEMENT head (%head.pcd.mix;)*>
-->
<!ELEMENT head (#PCDATA | %annot.class; | %emph.class; | %tech.class; | %ednote.class;)*>
<!ATTLIST head
  %common.att; 
>
<!-- ............................................................... -->
<!-- Major specification structure ................................. -->
<!-- ............................................................... -->
<!ELEMENT spec (%spec.mdl;)>
<!ATTLIST spec
  %common.att; 
  xmlns:xlink CDATA #FIXED "http://www.w3.org/TR/WD-xlink"
  specDTDversionNum CDATA #FIXED "1"
  %local.version.att; 
>
<!ENTITY % href.att "
   xlink-form CDATA  #IMPLIED
   href       CDATA  #IMPLIED
   show       CDATA  #FIXED 'embed'
   actuate    CDATA  #FIXED 'auto'">
<!ENTITY % href-req.att "
   xlink-form CDATA  #FIXED 'simple'
   href       CDATA  #REQUIRED
   target  CDATA #IMPLIED
   show       CDATA  #FIXED 'embed'
   actuate    CDATA  #FIXED 'auto'">
<!--
<!ENTITY % source-req.att "
   source         CDATA     #REQUIRED
   xlink-form     CDATA     #FIXED 'simple'
   xml:attributes NMTOKENS  'href source'
   show           CDATA     #FIXED 'embed'
   actuate        CDATA     #FIXED 'auto'">
-->
<!ELEMENT front ((div1+, inform-div1*) | inform-div1+)>
<!ATTLIST front
  %common.att; 
>
<!ELEMENT body (%body.mdl;)>
<!ATTLIST body
  %common.att; 
>
<!--
<!ELEMENT back ((div1+, inform-div1*) | inform-div1+)>
-->
<!ELEMENT back ((div1 | inform-div1), (div1 | inform-div1)*)>
<!ATTLIST back
  %common.att; 
>
<!ELEMENT div1 (head, (%div.mix;)*, div2*)>
<!ATTLIST div1
  %common-idreq.att; 
  %ballot.att; 
  title CDATA #IMPLIED 
  numberSectionInd CDATA #IMPLIED
>
<!--    inform-div1: Non-normative division in back matter -->
<!ELEMENT inform-div1 (head, (%div.mix;)*, div2*)>
<!ATTLIST inform-div1
  %common-idreq.att; 
>
<!ELEMENT div2 (head, (%div.mix;)*, div3*)>
<!ATTLIST div2
  %common-idreq.att; 
>
<!ELEMENT div3 (head, (%div.mix;)*, div4*)>
<!ATTLIST div3
  %common-idreq.att; 
>
<!ELEMENT div4 (head, (%div.mix;)*)>
<!ATTLIST div4
  %common-idreq.att; 
>
<!-- ............................................................... -->
<!-- Specification header .......................................... -->
<!-- ............................................................... -->
<!ELEMENT header (%header.mdl;)>
<!ATTLIST header
  %common.att; 
  %ballot.att; 
>
<!--    Example of title: "Extensible Cheese Language (XCL)" -->
<!ELEMENT title (#PCDATA)>
<!ATTLIST title
  %common.att; 
>
<!--    Example of subtitle: "A Cheesy Specification" -->
<!ELEMENT subtitle (#PCDATA)>
<!ATTLIST subtitle
  %common.att; 
>
<!--    Example of shorttitle: "A Cheesy Specification" -->
<!ELEMENT shorttitle (#PCDATA)>
<!ATTLIST shorttitle
  %common.att; 
>
<!--    Example of version: "Version 666.0" -->
<!ELEMENT version (#PCDATA)>
<!ATTLIST version
  %common.att; 
>
<!ELEMENT ilxspecref (#PCDATA)>
<!ATTLIST ilxspecref
  %common.att; 
  spec CDATA #REQUIRED
  ref CDATA #IMPLIED
  alt CDATA #IMPLIED
>
<!ELEMENT ballot EMPTY>
<!ATTLIST ballot
  %common.att; 
  type (Committee | Membership | NormativeStandard | InformativeStandard | MembershipNormativeBallot | InformativeBallot | CommitteeNormativeBallot | Reference | MixedContent | AffiliateNormativeStandard | AffiliateInformativeStandard | AffiliateNormativeBallot | AffiliateInformativeBallot | LocalizedAdaptation | Proposal | Draft | NonStandardAvailable | Withdrawn | DSTUBallot) "Committee"
  number CDATA "1"
>
<!ELEMENT date (#PCDATA)>
<!ATTLIST date
  %common.att; 
>
<!ELEMENT authlist (author+)>
<!ATTLIST authlist
  %common.att; 
>
<!ELEMENT author (role, name, affiliation?, email?)>
<!ATTLIST author
  %common.att; 
>
<!ELEMENT name (#PCDATA)>
<!ATTLIST name
  %common.att; 
  %key.att; 
>
<!ELEMENT affiliation (#PCDATA)>
<!ATTLIST affiliation
  %common.att; 
>
<!ELEMENT email (#PCDATA)>
<!ATTLIST email
  %common.att; 
  %href-req.att; 
>
<!--    HREF attribute:
        email functions as a hypertext reference through this
        required attribute.  Typically the reference would use
        the mailto: scheme.  E.g.:

<email href="mailto:elm@arbortext.com">elm@arbortext.com</email>
        -->
<!ELEMENT status (%obj.mix;)+>
<!ATTLIST status
  %common.att; 
>
<!ELEMENT abstract (%hdr.mix;)*>
<!ATTLIST abstract
  %common.att; 
>
<!ELEMENT revisiondesc (%hdr.mix;)+>
<!ATTLIST revisiondesc
  %common.att; 
>
<!-- ............................................................... -->
<!-- Paragraph ..................................................... -->
<!-- ............................................................... -->
<!ELEMENT p (%p.pcd.mix; | %p.mix;)*>
<!ATTLIST p
  %common.att; 
>
<!ELEMENT indent (%p.pcd.mix; | %p.mix;)*>
<!ATTLIST indent
  %common.att; 
>
<!-- ............................................................... -->
<!-- Regular lists ................................................. -->
<!-- ............................................................... -->
<!--    list -->
<!ELEMENT list (item+)>
<!ATTLIST list
  %common.att; 
  spacing (normal | compact) #IMPLIED
>
<!--<!ELEMENT item (#PCDATA | %obj.mix;)*>-->
<!ELEMENT item (%p.pcd.mix; | %obj.mix;)*>
<!ATTLIST item
  %common.att; 
>
<!--    glist: Glossary list, typically two-column. -->
<!ELEMENT glist (gitem+)>
<!ATTLIST glist
  %common.att; 
>
<!ELEMENT gitem (label, def+)>
<!ATTLIST gitem
  %common.att; 
>
<!ELEMENT label (%label.pcd.mix;)*>
<!ATTLIST label
  %common.att; 
>
<!ELEMENT def (%p.pcd.mix; | %obj.mix;)*>
<!-- 
	2003-07-01 The attribbute list for a definition was extended to provide for identifying the source.
	sequence and preference for multiple definitions.
	'domainid' provides the domain identifier domain that submitted this definition to the gloassary
	'sortkey' provides a key on which multiple definitions may be sorted.
	'preferreddef' identifies the preferred term among a set of definitions.
-->
<!ATTLIST def
  %common.att; 
  domainid CDATA #IMPLIED
  sortkey CDATA #IMPLIED
  preferreddef (true | false) #IMPLIED
>
<!-- ............................................................... -->
<!-- Special lists ................................................. -->
<!-- ............................................................... -->
<!--    blist: Bibliography list. -->
<!ELEMENT blist (bibl+)>
<!ATTLIST blist
  %common.att; 
>
<!ELEMENT bibl (%bibl.pcd.mix;)*>
<!ATTLIST bibl
  %common.att; 
  %href.att; 
  %key.att; 
>
<!--    HREF attribute:
        bibl optionally functions as a hypertext reference to the
        referred-to resource through this attribute.  E.g.:

        <bibl href="http://www.my.com/doc.htm">My Document</bibl>
        -->
<!ELEMENT role (#PCDATA)>
<!ATTLIST role
  %common.att; 
>
<!-- ............................................................... -->
<!-- Notes ......................................................... -->
<!-- ............................................................... -->
<!ELEMENT note (%obj.mix;)+>
<!ATTLIST note
  %common.att; 
>
<!ELEMENT issue (%obj.mix;)+>
<!ATTLIST issue
  %common-idreq.att; 
>
<!-- ............................................................... -->
<!-- Basic display elements ........................................ -->
<!-- ............................................................... -->
<!--    eg: Example element, with whitespace respected. -->
<!ELEMENT eg (%eg.pcd.mix;)*>
<!ATTLIST eg
  %common.att; 
  %xmlspace.att; 
>
<!--    graphic: Displayed graphic.  Graphic data should be
        displayed at the point where it is referenced. -->
<!--    source attribute:
        The graphic data must reside at the location pointed to.
        This is a hypertext reference, but for practical purposes,
        for now it should just be a pathname. -->
<!ELEMENT graphic EMPTY>
<!ATTLIST graphic
  %common.att; 
  source CDATA #REQUIRED
  xlink-form CDATA #FIXED "simple"
  xml:attributes NMTOKENS "href source"
  show CDATA #FIXED "embed"
  actuate CDATA #FIXED "auto"
  alt CDATA #IMPLIED
>
<!-- ............................................................... -->
<!-- term definition elements ...................................... -->
<!-- ............................................................... -->
<!ENTITY % term.class "nt|xnt|com">
<!ENTITY % term.mix "%term.class;">
<!-- ............................................................... -->
<!-- Table ......................................................... -->
<!-- ............................................................... -->
<!-- borrowed in toto from XHTML 1.0 -->
<!--
 The border attribute sets the thickness of the frame around the
 table. The default units are screen pixels.

 The frame attribute specifies which parts of the frame around
 the table should be rendered. The values are not the same as
 CALS to avoid a name clash with the valign attribute.
-->
<!ENTITY % TFrame "(void|above|below|hsides|lhs|rhs|vsides|box|border)">
<!--
 The rules attribute defines which rules to draw between cells:

 If rules is absent then assume:
     "none" if border is absent or border="0" otherwise "all"
-->
<!ENTITY % TRules "(none | groups | rows | cols | all)">
<!-- horizontal placement of table relative to document -->
<!ENTITY % TAlign "(left|center|right)">
<!-- horizontal alignment attributes for cell contents

  char        alignment char, e.g. char=':'
  charoff     offset for alignment char
-->
<!ENTITY % cellhalign " align    (left | center | right | justify | char )  #IMPLIED
   char    CDATA  #IMPLIED
   charoff CDATA  #IMPLIED">
<!-- vertical alignment attributes for cell contents -->
<!ENTITY % cellvalign " valign  (top | middle | bottom | baseline )  #IMPLIED">
<!ELEMENT table (caption?, (col* | colgroup*), thead?, tfoot?, (tbody+ | tr+))>
<!ATTLIST table
  %common.att; 
  summary CDATA #IMPLIED
  width CDATA #IMPLIED
  border CDATA #IMPLIED
  frame %TFrame; #IMPLIED
  rules %TRules; #IMPLIED
  cellspacing CDATA #IMPLIED
  cellpadding CDATA #IMPLIED
>
<!ELEMENT caption (%p.pcd.mix;)*>
<!ATTLIST caption
  %common.att; 
>
<!ELEMENT thead (tr)+>
<!ATTLIST thead
  %common.att; 
  %cellhalign; 
  %cellvalign; 
>
<!ELEMENT tfoot (tr)+>
<!ATTLIST tfoot
  %common.att; 
  %cellhalign; 
  %cellvalign; 
>
<!ELEMENT tbody (tr)+>
<!ATTLIST tbody
  %common.att; 
  %cellhalign; 
  %cellvalign; 
>
<!ELEMENT colgroup (col)*>
<!ATTLIST colgroup
  %common.att; 
>
<!--
colgroup groups a set of col elements. It allows you to group
several semantically related columns together.
-->
<!ATTLIST colgroup
  span CDATA "1"
  width CDATA #IMPLIED
  %cellhalign; 
  %cellvalign; 
>
<!ELEMENT col EMPTY>
<!ATTLIST col
  %common.att; 
>
<!--
 col elements define the alignment properties for cells in
 one or more columns.

 The width attribute specifies the width of the columns, e.g.

     width=64        width in screen pixels
     width=0.5*      relative width of 0.5

 The span attribute causes the attributes of one
 col element to apply to more than one column.
-->
<!ATTLIST col
  span CDATA "1"
  width CDATA #IMPLIED
  %cellhalign; 
  %cellvalign; 
>
<!ELEMENT tr (th | td)+>
<!ATTLIST tr
  %common.att; 
  %cellhalign; 
  %cellvalign; 
>
<!ELEMENT th (%p.pcd.mix; | %p.mix;)*>
<!ATTLIST th
  %common.att; 
>
<!-- th is for headers, td for data and for cells acting as both -->
<!ATTLIST th
  abbr CDATA #IMPLIED
  axis CDATA #IMPLIED
  headers IDREFS #IMPLIED
>
<!-- Scope is simpler than headers attribute for common tables -->
<!ENTITY % Scope "(row|col|rowgroup|colgroup)">
<!ATTLIST th
  scope %Scope; #IMPLIED
  rowspan CDATA "1"
  colspan CDATA "1"
  %cellhalign; 
  %cellvalign; 
>
<!ELEMENT td (%p.pcd.mix; | p | %p.mix;)*>
<!ATTLIST td
  %common.att; 
  abbr CDATA #IMPLIED
  axis CDATA #IMPLIED
  headers IDREFS #IMPLIED
  scope %Scope; #IMPLIED
  rowspan CDATA "1"
  colspan CDATA "1"
  %cellhalign; 
  %cellvalign; 
>
<!ENTITY % CAlign "(top|bottom|left|right)">
<!--
    Use thead to duplicate headers when breaking table
    across page boundaries, or for static headers when
    tbody sections are rendered in scrolling panel.

    Use tfoot to duplicate footers when breaking table
    across page boundaries, or for static footers when
    tbody sections are rendered in scrolling panel.

    Use multiple tbody sections when rules are needed
    between groups of table rows.
-->
<!-- ............................................................... -->
<!-- Phrase-level elements ......................................... -->
<!-- ............................................................... -->
<!--    bibref: Reference to a bibliography list entry; should
        generate, in square brackets, "key" on bibl. -->
<!ELEMENT bibref EMPTY>
<!ATTLIST bibref
  %common.att; 
  %ref-req.att; 
>
<!--    ref attribute:
        A bibliography reference must link to the bibl element that
        describes the resource. -->
<!ELEMENT code (%tech.pcd.mix;)*>
<!ATTLIST code
  %common.att; 
>
<!--    ednote: Editorial note for communication among editors. -->
<!ELEMENT ednote (name?, date?, edtext)>
<!ATTLIST ednote
  %common.att; 
>
<!ELEMENT edtext (%p.pcd.mix;)*>
<!ATTLIST edtext
  %common.att; 
>
<!-- ht loosened up -->
<!ELEMENT emph (#PCDATA)>
<!ATTLIST emph
  %common.att; 
>
<!-- edit added 2/16/2006 in order to enable marking a span
       of p.pcd.mix as having been 'changed', 'deleted' or 'inserted'
       since last publication.  This affords access to the 'class'
       attributes for these strings.  It is expected that the 'edit' 
       element will be converted to a simple 'span' element in HTML,
       with the 'class' attribute providing values for the 'class' 
       attribute of the 'span'.  This maps relatively well to the 
       proposed 'edit' attribute in XHTML2.
-->
<!ELEMENT edit (%p.pcd.mix;)*>
<!ATTLIST edit
  %common.att; 
>
<!--    footnote: Both footnote content and call to footnote. -->
<!ELEMENT footnote (%obj.mix;)+>
<!ATTLIST footnote
  %common.att; 
>
<!ELEMENT kw (%tech.pcd.mix;)*>
<!ATTLIST kw
  %common.att; 
>
<!--    loc: Generic link to a Web resource, similar to HTML's A. -->
<!ELEMENT loc (#PCDATA)>
<!ATTLIST loc
  %common.att; 
  %href-req.att; 
>
<!--    HREF attribute:
        The purpose of a loc element is to function as a A-like
        hypertext link to a resource.  (Ideally, the content of loc
        will also mention the URI of the resource, so that readers of
        the printed version will be able to locate the resource.) E.g.:

<loc href="http://www.my.com/doc.htm">http://www.my.com/doc.htm</loc>
        -->
<!--    nt: Mention of a nonterminal in text, along with a link to
        the production in the current document that defines it. -->
<!ELEMENT nt (#PCDATA)>
<!ATTLIST nt
  %common.att; 
  %def-req.att; 
>
<!--    def attribute:
        The nonterminal must link to the production that defines
        it. -->
<!--    quote: Scare quotes and other purely presentational quotes. -->
<!ELEMENT quote (%p.pcd.mix;)*>
<!ATTLIST quote
  %common.att; 
>
<!--    specref: Reference to a div, list item, prod, or issue
        in the current document; should generate italic "[n.n],
        Section Title" for div, "n" for numbered item, "[n]" for
        production, or "Issue n" for issue. -->
<!ELEMENT specref EMPTY>
<!ATTLIST specref
  %common.att; 
  %ref-req.att; 
>
<!--    ref attribute:
        The purpose of a specref element is to link to a div, item
        in an list, or production in the current spec. -->
<!--    term: The term in text that is being defined in text. -->
<!ELEMENT term (#PCDATA)>
<!ATTLIST term
  %common.att; 
>
<!--    termdef: Definition of a term in text. -->
<!ELEMENT termdef (%termdef.pcd.mix; | %termdef.mix;)*>
<!ATTLIST termdef
  %common-idreq.att; 
  %ref.att; 
>
<!ELEMENT anchor EMPTY>
<!ATTLIST anchor
  %common-idreq.att; 
>
<!--    ID attribute:
        A term definition must have an ID so that it can be linked
        to from termref elements. -->
<!--    term attribute:
        The canonical form of the term or phrase being defined must
        appear in this attribute, even if the term or phrase also
        appears in the element content in identical form (e.g., in
        the term element). -->
<!ATTLIST termdef
  term CDATA #REQUIRED
>
<!--    termref: Mention of a term, along with a link to the
        definition in the current document. -->
<!ELEMENT termref (#PCDATA)>
<!ATTLIST termref
  %common.att; 
  %ref-req.att; 
>
<!--    ref attribute:
        A term reference must link to the termdef element that
        defines the term. -->
<!--    titleref: Citation of another document, which can also
        link to that document if it is a Web resource. -->
<!ELEMENT titleref (#PCDATA)>
<!ATTLIST titleref
  %common.att; 
  %href.att; 
>
<!--    HREF attribute:
        A title reference can optionally function as a hypertext
        link to the resource with this title.  E.g.:

<loc href="http://www.my.com/doc.htm">http://www.my.com/doc.htm</loc>
        -->
<!--    nt: Mention of a nonterminal in text, along with a link to
        the production in another document that defines it. -->
<!ELEMENT xnt (#PCDATA)>
<!ATTLIST xnt
  %common.att; 
  %href-req.att; 
>
<!--    HREF attribute:
        The nonterminal must hyperlink to a resource that serves
        to define it (e.g., a production in a related XML
        specification).  E.g.:

<xnt href="http://www.w3.org/TR/spec.htm#prod3">Name</xnt>
        -->
<!--    specref: Reference to a div, list item, prod, or issue
        in a related specification document; should generate
        no special text. -->
<!ELEMENT xspecref (#PCDATA)>
<!ATTLIST xspecref
  %common.att; 
  spec CDATA #REQUIRED
  ref CDATA #IMPLIED
  alt CDATA #IMPLIED
>
<!--    termref: Mention of a term, along with a link to the
        definition in a related document. -->
<!--    HREF attribute:
        The spec reference must hyperlink to the resource to
        cross-refer to (e.g., a section in a related XML
        specification).  E.g.:

<xspecref spec="http://www.w3.org/TR/spec" ref="sec2" alt="the section on constraints"/>
        -->
<!--    HREF attribute:
        The term reference must hyperlink to the resource that
        serves to define the term (e.g., a term definition in
        a related XML specification).  E.g.:

<xtermref href="http://www.w3.org/TR/spec.htm#term5">
entity
</xtermref>
        -->
<!ELEMENT xtermref (#PCDATA)>
<!ATTLIST xtermref
  %common.att; 
  %href-req.att; 
>
<!-- pointer to a type in the v3dt spec -->
<!ELEMENT xdtref EMPTY>
<!ATTLIST xdtref
  %common.att; 
  ref NMTOKEN #REQUIRED
>
<!-- pointer to a property in the v3dt spec -->
<!ELEMENT xpropref EMPTY>
<!ATTLIST xpropref
  %common.att; 
  ref NMTOKEN #REQUIRED
>
<!-- pointer to a specific table in another spec -->
<!ELEMENT xtabref EMPTY>
<!ATTLIST xtabref
  %common.att; 
  spec CDATA #REQUIRED
  ref NMTOKEN #REQUIRED
>
<!-- pointer to a specific table in the current spec -->
<!ELEMENT tabref EMPTY>
<!ATTLIST tabref
  %common.att; 
  ref IDREF #REQUIRED
>
<!ELEMENT br EMPTY>
<!-- ............................................................... -->
<!-- End of XML specification DTD .................................. -->
<!-- ............................................................... -->
